// Plot configuration shared across both ternary charts


function initPlot(divId, prefix){
const grid = makeInvisibleGrid(0.025);
const selection = makeSelectionTrace();
Plotly.newPlot(divId, [...grid, ...selection], layout('Click once to place your dot'), {displayModeBar:false, responsive:true});


const plot = document.getElementById(divId);
plot.on('plotly_click', (ev)=>{
// Use closest invisible grid point to get (a,b,c)
const pt = ev.points?.[0];
if(!pt) return;
const a = norm(pt.a), b = norm(pt.b), c = norm(pt.c);
// Update selection trace (index 1)
Plotly.restyle(plot, { a:[[a]], b:[[b]], c:[[c]] }, [1]);
setHiddenABC(prefix, a, b, c);
});
}


function requireDot(prefix){
const a = document.getElementById(prefix+'A').value;
return a !== '' && !isNaN(parseFloat(a));
}


function attachFormHandlers(){
restoreLock('present');
restoreLock('future');


document.getElementById('presentForm').addEventListener('submit', (e)=>{
e.preventDefault();
if(!requireDot('present')){
document.getElementById('presentStatus').textContent = 'Please click once inside the triangle to place your dot.';
return;
}
sendForm('present');
});


document.getElementById('futureForm').addEventListener('submit', (e)=>{
e.preventDefault();
if(!requireDot('future')){
document.getElementById('futureStatus').textContent = 'Please click once inside the triangle to place your dot.';
return;
}
sendForm('future');
});
}


// Bootstrap
initPlot('presentPlot','present');
initPlot('futurePlot','future');
attachFormHandlers();
